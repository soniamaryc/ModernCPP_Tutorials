
std::vector is a part of the C++ Standard Library and provides a wide range of member functions and operations for working with dynamic arrays. 
Here is a selection of some of the most commonly used functions and operations available in the std::vector library:

Initialization:

std::vector<T> v; Default constructor to create an empty vector of type T.
std::vector<T> v(size, value);: Create a vector of size elements, initialized to value.
std::vector<T> v(otherVector);: Create a copy of another vector.

Accessing Elements:

v[i]: Access the element at index i.
v.at(i): Access the element at index i with bounds checking.
v.front(): Access the first element.
v.back(): Access the last element.

Adding and Removing Elements:

v.push_back(value): Add an element to the end of the vector.
v.pop_back(): Remove the last element.
v.insert(pos, value): Insert an element at the specified position.
v.erase(pos): Remove the element at the specified position.
v.erase(first, last): Remove elements in the range [first, last).

Size and Capacity:

v.size(): Get the number of elements in the vector.
v.empty(): Check if the vector is empty.
v.capacity(): Get the current storage capacity.
v.reserve(newCapacity): Reserve memory for at least newCapacity elements.

Iterators:

v.begin(): Return an iterator to the beginning.
v.end(): Return an iterator to one past the end.
v.rbegin(): Return a reverse iterator to the end.
v.rend(): Return a reverse iterator to one before the beginning.

Modifiers:

v.clear(): Remove all elements from the vector.
v.swap(otherVector): Swap the contents of two vectors.
v.assign(count, value): Assign new values to the vector.
v.resize(newSize, value): Change the size of the vector.

Algorithms:

std::sort(v.begin(), v.end()): Sort the elements in ascending order.
std::reverse(v.begin(), v.end()): Reverse the order of elements.
std::find(v.begin(), v.end(), value): Find the first occurrence of a value.
Many other algorithms from the C++ Standard Library can be used with vectors.
These are some of the most commonly used member functions of std::vector.
The library provides a comprehensive set of operations for dynamic array management, making it a versatile and widely used data structure in C++ programming.
